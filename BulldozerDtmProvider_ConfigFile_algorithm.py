# -*- coding: utf-8 -*-

"""
/***************************************************************************
 BulldozerDtmProvider
                                 A QGIS plugin
 BulldozerDtmProvider
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2023-04-17
        copyright            : (C) 2023 by CNES
        email                : alexia.mondot@cnes.fr
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'CNES'
__date__ = '2023-04-17'
__copyright__ = '(C) 2023 by CNES'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

import os

from qgis.PyQt.QtCore import QCoreApplication
from qgis.core import (QgsProcessing,
                       QgsFeatureSink,
                       QgsProcessingAlgorithm,
                       QgsProcessingParameterFile,
                       QgsProcessingParameterFeatureSink,
                       QgsProcessingParameterRasterDestination,
                       QgsProcessingParameterNumber,
                       QgsRasterLayer,
                       QgsProject)

from .import_bulldozer import dsm_to_dtm
from bulldozer.utils.config_parser import ConfigParser
from .BulldozerDtmProvider_algorithm import BulldozerDtmProviderAlgorithm

class BulldozerDtmProviderConfigFileAlgorithm(BulldozerDtmProviderAlgorithm):
    """
    Processing algorithm that calls Bulldozer with config file.
    """

    INPUT = 'INPUT'
    OUTPUT = 'OUTPUT'

    def initAlgorithm(self, config):
        """
        Define the inputs, output and properties of the algorithm
        """

        self.addParameter(QgsProcessingParameterFile(self.INPUT,
                                                     self.tr('Input YAML config file'),
                                                     extension="yaml"
                                                     )
                          )

    def processAlgorithm(self, parameters, context, feedback):
        """
        Call Bulldozer with config file
        """

        source = self.parameterAsString(parameters, self.INPUT, context)

        dsm_to_dtm(config_path=source)

        parser = ConfigParser(False)
        input_params = parser.read(source)
        output_dir=input_params['output_dir']

        self.OUTPUT = os.path.join(output_dir, "DTM.tif")
        return {self.OUTPUT: os.path.join(output_dir, "DTM.tif")}

    def postProcessAlgorithm(self, context, feedback):
        """
        Add the DTM to the map
        """
        rlayer = QgsRasterLayer(self.OUTPUT, "DTM")

        if not rlayer.isValid():
            print("Layer failed to load!")

        QgsProject.instance().addMapLayer(rlayer)

        return {self.OUTPUT: self.OUTPUT}

    def name(self):
        """
        Returns the algorithm name, used for identifying the algorithm.
        """
        return 'Bulldozer (Using config file)'

    def createInstance(self):
        """
        Create a new instance of the algorithm.
        """
        return BulldozerDtmProviderConfigFileAlgorithm()
